@model PaginatedList<TraderData.Models.TradeImportModels.TradeImport>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<p>
    <a asp-action="Import">Import</a>
</p>
<p>
    <a href="/Tax/Index">Get Taxes</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model[0].ExternalReference)
                </th>
			    <th>
                    @Html.DisplayNameFor(model => model[0].TransactionType)
                </th>
			    <th>
                    @Html.DisplayNameFor(model => model[0].Instrument.Name)
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["ValueSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Value</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["QuantitySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Quantity</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date time</a>
                </th>
			    <th>
                    @Html.DisplayNameFor(model => model[0].TransactionFee)
                </th>
			    <th>
				    @Html.DisplayNameFor(model => model[0].FileImport)
			    </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ExternalReference)
            </td>
			<td>
                @Html.DisplayFor(modelItem => item.TransactionType)
            </td>
			<td>
                @Html.DisplayFor(modelItem => item.Instrument.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
			
            <td>
                @Html.DisplayFor(modelItem => item.TransactionDate)
            </td>
			<td>
                @Html.DisplayFor(modelItem => item.TransactionFee) @Html.DisplayFor(modelItem => item.Currency)
            </td>
			<td>
                <a asp-controller="FileImport" asp-action="Details" asp-route-id="@item.FileImportId">Import</a>
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.TradeImportID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.TradeImportID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.TradeImportID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
